"""applicant

Revision ID: 7fd52c7442e7
Revises: 3f1c801876e3
Create Date: 2024-06-08 03:05:04.760515

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '7fd52c7442e7'
down_revision: Union[str, None] = '3f1c801876e3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('applicant_xp',
                    sa.Column('id', sa.String(), nullable=False),
                    sa.Column('applicant_id', sa.String(length=50), nullable=False),
                    sa.Column('company_name', sa.String(), nullable=False),
                    sa.Column('company_id', sa.String(), nullable=True),
                    sa.Column('position', sa.String(), nullable=False),
                    sa.Column('position_id', sa.String(), nullable=True),
                    sa.Column('start_date', sa.DateTime(), nullable=False),
                    sa.Column('end_date', sa.DateTime(), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('skill_set', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('applicants',
                    sa.Column('id', sa.String(), nullable=False),
                    sa.Column('user_id', sa.String(length=50), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('salary_from', sa.Integer(), nullable=True),
                    sa.Column('currency', sa.String(length=50), nullable=True),
                    sa.Column('age', sa.Integer(), nullable=True),
                    sa.Column('experience', sa.String(), nullable=True),
                    sa.Column('is_relocation', sa.Boolean(), nullable=True),
                    sa.Column('is_remote', sa.Boolean(), nullable=True),
                    sa.Column('last_visited', sa.DateTime(), nullable=True),
                    sa.Column('registered_at', sa.DateTime(), nullable=True),
                    sa.Column('search_status_id', sa.String(length=50), nullable=True),
                    sa.Column('qualification_id', sa.String(length=50), nullable=True),
                    sa.Column('division_id', sa.String(length=50), nullable=True),
                    sa.Column('city_id', sa.String(length=50), nullable=True),
                    sa.Column('skill_set', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('companies',
                    sa.Column('id', sa.String(), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('subtitle', sa.String(), nullable=True),
                    sa.Column('href', sa.String(), nullable=True),
                    sa.Column('logo_url', sa.String(), nullable=True),
                    sa.Column('accredited', sa.Boolean(), nullable=True),
                    sa.Column('habr_id', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('dict_search_status',
                    sa.Column('id', sa.String(length=50), nullable=False),
                    sa.Column('name', sa.String(length=50), nullable=True),
                    sa.Column('habr_id', sa.Integer(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('dict_skill',
                    sa.Column('id', sa.String(length=50), nullable=False),
                    sa.Column('name', sa.String(length=50), nullable=True),
                    sa.Column('type', sa.String(length=50), nullable=True),
                    sa.Column('qualification_id', sa.String(length=50), nullable=True),
                    sa.Column('division_id', sa.String(length=50), nullable=True),
                    sa.Column('habr_id', sa.Integer(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.add_column('vacancies', sa.Column('skill_set', sa.String(), nullable=True))
    op.drop_column('vacancies', 'skills')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('vacancies', sa.Column('skills', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('vacancies', 'skill_set')
    op.drop_table('dict_skill')
    op.drop_table('dict_search_status')
    op.drop_table('companies')
    op.drop_table('applicants')
    op.drop_table('applicant_xp')
    # ### end Alembic commands ###
